% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrics.R
\name{sfn_metrics}
\alias{sfn_metrics}
\title{Metrics summary function}
\usage{
sfn_metrics(sfn_data, period, .funs, solar, interval = c("general", "predawn",
  "midday", "night", "daylight"), int_start = NULL, int_end = NULL, ...)
}
\arguments{
\item{sfn_data}{\code{\link{sfn_data}} or \code{\link{sfn_data_multi}} object
to obtain the metrics from}

\item{period}{Time period to aggregate data by. See period section for an explanation
about the periods ('daily', 'monthly', 'yearly', ...)}

\item{.funs}{List of function calls generated by \code{\link[dplyr]{funs}}, or
a character vector of functions means, or simply a function. See .funs section
for more info about supplying custom functions.}

\item{solar}{Logical indicating if the solarTIMESTAMP must be used instead of
the site local TIMESTAMP. Default to TRUE (use solarTIMESTAMP).}

\item{...}{optional arguments to pass to methods used
(i.e. tibbletime::collapse_index or summarise funs extra arguments)}

\item{general}{Logical indicating if general metrics (all data) must be
returned}

\item{predawn}{Logical indicating if metrics for predawn interval must be
returned.}

\item{pd_start}{Hour to start the predawn interval}

\item{pd_end}{Hour to end the predawn interval}

\item{midday}{Logical indicating if metrics for midday interval must be
returned.}

\item{md_start}{Hour to start the midday interval}

\item{md_end}{Hour to end the midday interval}

\item{nighttime}{Logical indicating if division between night and day id
done and metrics for each subset (day and night) returned.}

\item{night_start}{Hour to start the night interval}

\item{night_end}{Hour to end the night interval}
}
\value{
For \code{\link{sfn_data}} objects, a list of tbl_time objects
  with the following structure:
  \itemize{
    \item{$sapf: metrics for the sapflow data
          \itemize{
            \item{$sapf: general metrics}
            \item{$sapf_pd: metrics for predawn interval (if
                  \code{predawn = FALSE} the slot will be empty)}
            \item{$sapf_md: metrics for midday interval (if
                  \code{midday = FALSE} the slot will be empty)}
            \item{$sapf_day: metrics for diurnal interval (if
                  \code{nighttime = FALSE} the slot will be empty)}
            \item{$sapf_night: metrics for diurnal interval (if
                  \code{nighttime = FALSE} the slot will be empty)}
          }}
    \item{$env: metrics for the environmental data
          \itemize{
            \item{$env: general metrics}
            \item{$env_pd: metrics for predawn interval (if
                  \code{predawn = FALSE} the slot will be empty)}
            \item{$env_md: metrics for midday interval (if
                  \code{midday = FALSE} the slot will be empty)}
            \item{$env_day: metrics for diurnal interval (if
                  \code{nighttime = FALSE} the slot will be empty)}
            \item{$env_night: metrics for diurnal interval (if
                  \code{nighttime = FALSE} the slot will be empty)}
          }}
  }

  For \code{\link{sfn_data_multi}} objects, a list of lists of tbl_time objects
  with the metrics for each site:
  \itemize{
    \item{$SITE_CODE
      \itemize{
        \item{$sapf: metrics for the sapflow data
          \itemize{
            \item{$sapf: general metrics}
            \item{$sapf_pd: metrics for predawn interval (if
                  \code{predawn = FALSE} the slot will be empty)}
            \item{$sapf_md: metrics for midday interval (if
                  \code{midday = FALSE} the slot will be empty)}
            \item{$sapf_day: metrics for diurnal interval (if
                  \code{nighttime = FALSE} the solot will be empty)}
            \item{$sapf_night: metrics for diurnal interval (if
                  \code{nighttime = FALSE} the solot will be empty)}
          }}
      }
      \itemize{
        \item{$env: metrics for the environmental data
          \itemize{
            \item{$env: general metrics}
            \item{$env_pd: metrics for predawn interval (if
                  \code{predawn = FALSE} the slot will be empty)}
            \item{$env_md: metrics for midday interval (if
                  \code{midday = FALSE} the slot will be empty)}
            \item{$env_day: metrics for diurnal interval (if
                  \code{nighttime = FALSE} the solot will be empty)}
            \item{$env_night: metrics for diurnal interval (if
                  \code{nighttime = FALSE} the solot will be empty)}
          }}
      }
    }
    \item{$NEXT_SITE_CODE...}
  }
}
\description{
Generate daily or above metrics from a site data for the period indicated
}
\section{period}{

\code{period} argument is piped to \code{tibbletime::collapse_index} function
with \code{side = 'end', clean = FALSE} options. See
\code{\link[tibbletime]{collapse_index}} for a detailed explanation but in
short:
\itemize{
  \item{\emph{frequency period} format: "1 day", "7 day", "1 month", "1 year"}
  \item{\emph{shorthand} format: "hourly", "daily", "monthly", "yearly"}
  \item{\emph{custom} format: a vector of dates to use as custom and more flexible boundaries}
}
Also, you can override the default behaviour of \code{sfn_metrics}, providing
\code{side = 'end'} or \code{clean = FALSE}.
}

\section{.funs}{

\code{.funs} argument uses the same method as the \code{.funs} argument in the
\code{\link[dplyr]{summarise_all}} function of \code{dplyr} package. Basically
it accepts a list of function calls generated by funs(), or a character vector
of function names, or simply a function. If you want to pass on a custom
function you can specify it here. See details in \code{\link{summarise_by_period}}
for more complex summarising functions declaration.
}

\examples{
library(dplyr)

## sfn_data
data('ARG_TRE', package = 'sapfluxnetr')
ARG_TRE_metrics <- sfn_metrics(
  ARG_TRE,
  period = '7 days',
  .funs = funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE), n()),
  solar = FALSE,
  general = TRUE,
  predawn = TRUE,
  pd_start = 4,
  pd_end = 6,
  midday = TRUE,
  md_start = 12,
  md_end = 14,
  nighttime = TRUE,
  night_start = 20,
  night_end = 6,
  side = 'start'
)

str(ARG_TRE_metrics)
ARG_TRE_metrics[['sapf']][['sapf_pd']]
ARG_TRE_metrics[['env']][['env_night']]

## sfn_data_multi
\dontrun{
data('ARG_MAZ', package = 'sapfluxnetr')
data('AUS_CAN_ST2_MIX', package = 'sapfluxnetr')
multi_sfn <- sfn_data_multi(ARG_TRE, ARG_MAZ, AUS_CAN_ST2_MIX)

multi_metrics <- sfn_metrics(
  multi_sfn,
  period = '7 days',
  .funs = funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE), n()),
  solar = FALSE,
  general = TRUE,
  predawn = TRUE,
  pd_start = 4,
  pd_end = 6,
  midday = TRUE,
  md_start = 12,
  md_end = 14,
  nighttime = FALSE,
  side = 'start'
)

str(multi_metrics)

multi_metrics[['ARG_TRE']][['sapf']][['sapf_pd']]
}

}
\seealso{
Other metrics: \code{\link{metrics}}
}
