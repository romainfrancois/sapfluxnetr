% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfn_dplyr.R
\name{sfn_dplyr_functions}
\alias{sfn_dplyr_functions}
\alias{sfn_filter}
\alias{sfn_mutate}
\title{dplyr_like functions to work with sfn_data objects}
\usage{
sfn_filter(sfn_data, ..., solar = FALSE)

sfn_mutate(sfn_data, ..., solar = FALSE)
}
\arguments{
\item{sfn_data}{\code{sfn_data} or \code{sfn_data_multi} object to subset}

\item{...}{expressions to pass to the relevant dplyr function,
\code{\link[dplyr]{filter}} or \code{\link[dplyr]{mutate}}}

\item{solar}{Logical indicating if solar timestamp must used to subset}
}
\value{
For \code{sfn_data} objects, a filtered \code{sfn_data} or NULL if
  no data meet the criteria. For \code{sfn_data_multi} another
  \code{sfn_data_multi} with the sites filtered, and an empty
  \code{sfn_data_multi} if any sites met the criteria

For \code{sfn_data} objects, a filtered \code{sfn_data} or NULL if
  no data meet the criteria. For \code{sfn_data_multi} another
  \code{sfn_data_multi} with the sites filtered, and an empty
  \code{sfn_data_multi} if any sites met the criteria
}
\description{
Family of functions to simulate dplyr verbs in sfn_data objects
}
\details{
This functions accepts also sfn_data_multi objects. In this case the
function arguments (filters or mutations) are applied to each sfn_data (site)
present in the object provided.
}
\section{Functions}{
\itemize{
\item \code{sfn_filter}: \code{sfn_filter}: filtering rows by value
(i.e. filtering by TIMESTAMP).

\item \code{sfn_mutate}: \code{sfn_mutate}: transform columns by function.
}}

\examples{
library(dplyr)
library(lubridate)

# data
data('FOO', package = 'sapfluxnetr')

# by timestamp
foo_timestamp <- get_timestmap(FOO)

foo_timestamp_trimmed <- foo_timestamp[1:100]

sfn_filter(
  FOO,
  TIMESTAMP \%in\% foo_timestamp_trimmed
)

# by wind speed value
ws_threshold <- 25

sfn_filter(
  FOO,
  ws <= ws_threshold
)

## multi
data('BAR', package = 'sapfluxnetr')
multi_sfn <- sfn_data_multi(FOO, BAR)

# by timestamp
sfn_filter(
  multi_sfn,
  between(day(TIMESTAMP), 18, 22)
)

# by wind speed value
sfn_filter(
  multi_sfn,
  ws <= ws_threshold
)

library(dplyr)
library(lubridate)

# data
data('FOO', package = 'sapfluxnetr')

# transform to NAs any wind value above 25
ws_threshold <- 25
sfn_mutate(FOO, ws = if_else(ws > 25, NA_real_, ws))

## multi
data(BAR, package = 'sapfluxnetr')
data(BAZ, package = 'sapfluxnetr')
multi_sfn <- sfn_data_multi(FOO, BAR, BAZ)

multi_sfn_mutated <- sfn_mutate(
  multi_sfn, ws = if_else(ws > 25, NA_real_, ws)
)

multi_sfn_mutated[['FOO']]

}
