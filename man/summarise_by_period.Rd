% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{summarise_by_period}
\alias{summarise_by_period}
\title{metrics shared statistics}
\usage{
summarise_by_period(data, period, .funs, ...)
}
\arguments{
\item{data}{sapflow or environmental data as obtained by \code{\link{get_sapf}}
and \code{\link{get_env}}}

\item{period}{tibbletime::collapse_by period}

\item{.funs}{dplyr::summarise_all funs}

\item{...}{optional arguments for tibbletime::collapse_by function and
dplyr::summarise_all function}
}
\value{
A `tbl_time` object with the metrics results. The names of the columns
  indicate the original variable (tree or environmental variable) and the
  metric calculated (i.e. `vpd_mean`)
}
\description{
This helper pipes the different chain of commands to perform the period
summaries, shared by general, predawn, midday and nighttime metrics
}
\details{
This function uses internally \code{\link[tibbletime]{collapse_by}} and
\code{\link[dplyr]{summarise_all}} and arguments to control these functions
can be passed as `...`. Arguments for each function are spliced and applied
when needed. Be advised that all arguments passed to the summarise_all function
will be applied to all the sumarising functions used, so it will fail if any
of that functions does not have that argument. To complex function-argument
relationships, indicate each function extra argument in the .funs argument
with the dplyr::funs function:
\preformatted{
# This will fail beacuse na.rm argument will be also passed to n function,
# which does not accept any argument
summarise_by_period(
  data = get_sapf(FOO),
  period = '7 days',
  .funs = funs(mean, sd, n),
  na.rm = TRUE
)

# to solve this is better to use:
summarise_by_period(
  data = get_sapf(FOO),
  period = '7 days',
  .funs = funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE), n())
)
}
}
\examples{
#data
load('FOO', package = 'sapfluxnetr')

# simple summary
summarise_by_period(
  data = get_sapf(FOO),
  period = '7 days',
  .funs = funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE), n())
)

}
